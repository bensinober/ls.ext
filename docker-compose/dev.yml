---
version: '3'

volumes:
  cuke_reports: {}

services:

  koha_mysql:
    ports:
      - "3306:3306"

  catalinker:
    build:
      context: "${LSEXTPATH:-..}/redef/catalinker"
      dockerfile: Dockerfile-dev
    volumes:
      - "${MOUNTPATH:-..}/redef/catalinker/client:/usr/src/app/client"
      - "${MOUNTPATH:-..}/redef/catalinker/public:/usr/src/app/public"
      - "${MOUNTPATH:-..}/redef/catalinker/server:/usr/src/app/server"

  services:
    build:
      context: "${LSEXTPATH:-..}/redef/services"
      dockerfile: Dockerfile.dev
    depends_on:
      - fuseki
      - koha
    ports:
      - "8005:8005"
      - "5070:5070"
    environment:
      KOHA_MYSQL_USER: "${KOHA_ADMINUSER:-admin}"
      KOHA_MYSQL_PASS: "${KOHA_ADMINPASS:-secret}"
      KOHA_MYSQL_DB: "koha_${KOHA_INSTANCE:-name}"
      KOHA_API_PASS_ENCRYPTED: "$$2a$$08$$7WnfE3Fyh5W0C28Xp2SWH.NfgqLEZzw9oZI4qZ3MHf.lQS8yvv6hC"

  fuseki:
    ports:
      - "3030:3030"

  elasticsearch:
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"

  smtp:
    ports:
      - "8100:8000"

  sms:
    ports:
      - "8101:9999"

  rfidhub:
    container_name: rfidhub
    image: "digibib/rfidhub2:ef93aae6585c66ee2a2300c18a2ad0d1d500f240"
    networks:
      - backend
    depends_on:
      - sip_proxy
    ports:
      - "6006:6006"
      - "8899:8899"
    environment:
      SIP_SERVER: sip_proxy:9999
      TCP_PORT: 6006
      SIP_USER: rfidhub
      SIP_PASS: "${SIP_AUTOPASS:-autopass}"
    command:
      - "/koha-rfidhub2"
      - "-rfid-timeout=10m"
      - "-ws-proxy=false"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "2"

  nlsink: # Fake NL response, for testing
    container_name: nlsink
    image: "alpine:3.3"
    networks:
      - backend
    ports:
      - "9998:9999"
    command:
      - "/bin/sh"
      - "-c"
      - "mkfifo pipe; while true ; do { read line<pipe;echo -e 'HTTP/1.1 200 OK\nContent-Type: text/xml; charset=utf-8\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ns0:Envelope xmlns:ns0=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns1=\"http://lanekortet.no\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ns0:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">\n<ns0:Body>\n<ns1:hentResponse>\n<return xsi:type=\"ns1:Resultat\">\n<status xsi:type=\"xsd:boolean\">true</status>\n<melding xsi:type=\"xsd:string\">OK</melding>\n<antall_treff xsi:type=\"xsd:int\">0</antall_treff>\n<antall_poster_returnert xsi:type=\"xsd:int\">0</antall_poster_returnert>\n<neste_indeks xsi:type=\"xsd:int\">0</neste_indeks>\n<server_tid xsi:type=\"xsd:string\">2016-07-07T11:29:08</server_tid>\n</return>\n</ns1:hentResponse>\n</ns0:Body>\n</ns0:Envelope>\n' ; } | nc -l -p 9999 > pipe; done"

  tcpsink: # Fake webserver response, for testing
    container_name: tcpsink
    image: "alpine:3.3"
    networks:
      - backend
    ports:
      - "9999:9999"
    command:
      - "/bin/sh"
      - "-c"
      - "mkfifo pipe; while true ; do { read line<pipe;echo -e 'HTTP/1.1 200 OK\\r\\n' ; } | nc -l -p 9999 > pipe; done"

  sibyl:
    ports:
      - "1666:1666"
