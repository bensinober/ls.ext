PREFIX  deich: <__ONTOLOGY__>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  role: <http://data.deichman.no/role#>
PREFIX  duo: <http://data.deichman.no/utility#>
PREFIX  mediaType: <http://data.deichman.no/mediaType#>

CONSTRUCT {
 <__WORKURI__> a deich:Work ;
               deich:mainTitle ?mainTitle ;
               deich:subtitle ?subtitle ;
               deich:partTitle ?partTitle ;
               deich:partNumber ?partNumber ;
               deich:publicationYear ?publicationYear ;
               deich:contributor ?workContrib ;
               deich:subject ?subject ;
               deich:fictionNonfiction ?fictionNonfiction ;
               deich:hasSummary ?hasSummary ;
               deich:subjectName ?subjectName ;
               deich:hasWorkType ?hasWorkType ;
               deich:workTypeLabel ?workTypeLabel ;
               deich:genre ?genreLabel ;
               deich:compType ?compTypeLabel ;
               deich:mainEntryName ?mainEntryName ;
               deich:agents ?contribAgentName ;
               ?contribRoleURI ?contribAgentName ;
               deich:audience ?audience ;
               deich:dewey ?dewey ;
               deich:inst ?inst ;
               deich:bio ?bio ;
               deich:country ?country ;
               deich:nationality ?nationLabel ;
               deich:contentAdaptation ?contentAdaptationNorwegianName ;
               deich:series ?seriesTitle ;
               deich:literaryForm ?litform ;
               deich:created ?created ;
               deich:untranscribedTitle ?untranscribedTitle ;
               deich:hasTag ?hasTag .
?workContrib a deich:Contribution ;
               deich:role ?role ;
               deich:mainEntry ?mainEntry ;
               deich:agent ?contribAgent .
      ?contribAgent a deich:Agent ;
               deich:name ?name ;
               deich:birthYear ?birthYear ;
               deich:deathYear ?deathYear .
}
WHERE {
        { <__WORKURI__> a deich:Work . }

  UNION { <__WORKURI__> deich:literaryForm ?l .
           ?l rdfs:label ?litLabel .
           BIND(str(?litLabel) AS ?litform)
           FILTER(lang(?litLabel) = "no") }

  # This union matches the following types: Person, Corporation
  # Massage to the form: name[ ordinal][ subdivision][ (specification)
  UNION { <__WORKURI__> deich:subject ?subject .
            ?subject deich:name ?subjectNameStep1 .
                OPTIONAL { ?subject deich:ordinal ?subjectOrdinal }
                OPTIONAL { ?subject deich:subdivision ?subjectSubdivision }
                OPTIONAL { ?subject deich:specification ?subjectSpecification }

                BIND(IF (BOUND(?subjectOrdinal),
                    CONCAT(?subjectNameStep1, " ", str(?subjectOrdinal)),
                    ?subjectNameStep1) as ?subjectNameStep2) .

                BIND(IF (BOUND(?subjectSubdivision),
                    CONCAT(?subjectNameStep2, " ", str(?subjectSubdivion)),
                    ?subjectNameStep2) as ?subjectNameStep3) .

                BIND(IF (BOUND(?subjectSpecification),
                    CONCAT(?subjectNameStep3, " (", str(?subjectSpecification), ")"),
                    ?subjectNameStep3
                ) as ?subjectName)  .
        }

  # This union matches the following types: (General), Event
  # Massage to the form: name[ ordinal][ place][ date][ (specification)
  # emne:"Olympiske vinterleker 19 2002"
  UNION { <__WORKURI__> deich:subject ?subject .
            ?subject deich:prefLabel ?subjectNameStep1  .
            OPTIONAL { ?subject deich:ordinal ?subjectOrdinal }
            OPTIONAL { ?subject deich:specification ?subjectSpecification }
            OPTIONAL { ?subject deich:date ?subjectDate }
            OPTIONAL { ?subject deich:place ?subjectPlace . ?subjectPlace deich:prefLabel ?placeLabel  }

            BIND(IF (BOUND(?subjectOrdinal),
                CONCAT(?subjectNameStep1, " ", STR(?subjectOrdinal)),
                ?subjectNameStep1) as ?subjectNameStep2) .

            BIND(IF (BOUND(?placeLabel),
                CONCAT(?subjectNameStep2, " ", STR(?placeLabel)),
                ?subjectNameStep2) as ?subjectNameStep3) .

            BIND(IF (BOUND(?subjectDate),
                CONCAT(?subjectNameStep3, " ", STR(?subjectDate)),
                ?subjectNameStep3) as ?subjectNameStep4) .

            BIND(IF (BOUND(?subjectSpecification),
                CONCAT(?subjectNameStep4, " (", STR(?subjectSpecification), ")"),
                ?subjectNameStep4
                ) as ?subjectName)
        }

  # subject types with mainTitle: Work, Place
  UNION { <__WORKURI__> deich:subject ?subject .
            ?subject deich:mainTitle ?subjectNameStep1 .
            OPTIONAL {?subject deich:specification ?subjectSpecification }
            OPTIONAL {?subject deich:subtitle ?subjectSubtitle }
            OPTIONAL {?subject deich:partNumber ?subjectPartNumber }
            OPTIONAL {?subject deich:partTitle ?subjectPartTitle }
            OPTIONAL {?subject deich:contributor ?contributor .
                      ?contributor a deich:MainEntry .
                      ?contributor a deich:Contribution ;
                        deich:agent ?subjectWorkMainAgent .

                      ?subjectWorkMainAgent deich:name ?subjectAgentName }

            BIND(IF (BOUND(?subjectSpecification),
                CONCAT(?subjectNameStep1, " (", STR(?subjectSpecification), ")"),
                       ?subjectNameStep1) as ?subjectNameStep2) .

            BIND(IF (BOUND(?subjectSubtitle),
                CONCAT(?subjectNameStep2, " : ", STR(?subjectSubtitle)),
                       ?subjectNameStep2) as ?subjectNameStep3) .

            BIND(IF (BOUND(?subjectPartNumber),
                CONCAT(?subjectNameStep3, ". ", STR(?subjectPartNumber)),
                ?subjectNameStep3) as ?subjectNameStep4) .

            BIND(IF (BOUND(?subjectPartTitle),
                CONCAT(?subjectNameStep4, ". ", STR(?subjectPartTitle)),
                       ?subjectNameStep4) as ?subjectNameStep5)

            BIND(IF (BOUND(?subjectAgentName),
                            CONCAT(?subjectNameStep5, " / ", STR(?subjectAgentName)),
                                   ?subjectNameStep5) as ?subjectName) .
        }
  UNION { <__WORKURI__> deich:untranscribedTitle ?untranscribedTitle }
  UNION { <__WORKURI__> deich:created ?createdTime . BIND(str(?createdTime) AS ?created) }
  UNION { <__WORKURI__> deich:mainTitle ?mainTitleO . BIND(str(?mainTitleO) as ?mainTitle) }
  UNION { <__WORKURI__> deich:subtitle ?subtitleO . BIND(str(?subtitleO) as ?subtitle) }
  UNION { <__WORKURI__> deich:partTitle ?partTitleO . BIND(str(?partTitleO) as ?partTitle) }
  UNION { <__WORKURI__> deich:partNumber ?partNumberO . BIND(str(?partNumberO) as ?partNumber) }
  UNION { <__WORKURI__> deich:hasSummary ?hasSummaryO . BIND(str(?hasSummaryO) as ?hasSummary) }
  UNION { <__WORKURI__> deich:hasWorkType ?hasWorkType .
        ?hasWorkType rdfs:label ?langWorkTypeLabel .
        FILTER(LANGMATCHES(LANG(?langWorkTypeLabel), "no")) .
        BIND(str(?langWorkTypeLabel) AS ?workTypeLabel)
        }
  UNION { <__WORKURI__> deich:publicationYear ?publicationYearO . BIND(str(?publicationYearO) AS ?publicationYear) }
  UNION { <__WORKURI__> deich:contributor ?workContrib .
         ?workContrib a deich:Contribution ;
            deich:agent ?contribAgent ;
            deich:role ?contribRoleURI .

            ?contribAgent deich:name ?contribAgentNameStep1 .
            OPTIONAL { ?contribAgent deich:ordinal ?agentOrdinal }
            OPTIONAL { ?contribAgent deich:specification ?agentSpecification }

            BIND(IF (BOUND(?agentOrdinal),
                        CONCAT(?contribAgentNameStep1, " ", STR(?agentOrdinal)),
                               ?contribAgentNameStep1) as ?contribAgentNameStep2) .
            BIND(IF (BOUND(?agentSpecification),
                           CONCAT(?contribAgentNameStep2, " (", STR(?agentSpecification), ")"),
                               ?contribAgentNameStep2) as ?contribAgentName) .


         OPTIONAL {
            ?workContrib a deich:MainEntry.
            BIND(true AS ?mainEntry)
         }

         OPTIONAL {
              ?workContrib a deich:MainEntry.

              OPTIONAL { ?contribAgent deich:nationality ?nationality . ?nationality rdfs:label ?nationLabelLang .
                BIND(str(?nationLabelLang) AS ?nationLabel)
                FILTER(lang(?nationLabelLang) = "no")
              }
         }

         BIND (?contribAgentName AS ?name) .
         BIND (IF (BOUND(?mainEntry), ?contribAgentName, ?thisIsAlwaysUnbound) AS ?mainEntryName) .

         BIND(str(?contribRoleURI) AS ?role)
         OPTIONAL { ?contribAgent deich:birthYear ?birthYearO . BIND(str(?birthYearO) AS ?birthYear) }
         OPTIONAL { ?contribAgent deich:deathYear ?deathYearO . BIND(str(?deathYearO) AS ?deathYear) }
  }

  UNION {
      <__WORKURI__> deich:genre ?genre .
      ?genre a deich:Genre ;
            deich:prefLabel ?genreName  .
      OPTIONAL { <__WORKURI__> deich:genre ?genre. ?genre deich:specification ?genreSpec }
      BIND(IF(BOUND(?genreSpec), CONCAT(?genreName, " (", ?genreSpec, ")"), ?genreName) AS ?genreLabel)
  }
  UNION {  <__WORKURI__> deich:hasCompositionType ?compType .
           ?compType deich:prefLabel ?compTypeString .

           OPTIONAL { ?compType deich:specification ?compTypeSpec }
           BIND(IF(BOUND(?compTypeSpec), CONCAT(?compTypeString, " (", ?compTypeSpec, ")"), ?compTypeString) AS ?compTypeLabel)
  }
  UNION { <__WORKURI__>  deich:fictionNonfiction ?ficturi .
            BIND(str(?ficturi) AS ?fictionNonfiction)
  }
  UNION {  <__WORKURI__> deich:audience ?audienceUri .
           BIND(str(?audienceUri) AS ?audience)
  }
  UNION { <__WORKURI__> deich:hasClassification ?classEntry .
          ?classEntry deich:hasClassificationNumber ?dewey .
  }
  UNION { <__WORKURI__> deich:hasInstrumentation ?instrumentation.
           ?instrumentation deich:hasInstrument ?instrument .
           ?instrument deich:prefLabel ?instName
           OPTIONAL { ?instrument deich:specification ?instrumentSpec }
           BIND(IF(BOUND(?instrumentSpec), CONCAT(?instName, " (", ?instrumentSpec, ")"), ?instName) AS ?inst)
  }
  UNION { <__WORKURI__> deich:biography ?b .
           ?b rdfs:label ?bioLabel .
           BIND(str(?bioLabel) AS ?bio)
           FILTER(lang(?bioLabel) = "no")
  }
  UNION { <__WORKURI__> deich:nationality ?n .
           ?n rdfs:label ?nLabel .
           BIND(str(?nLabel) AS ?country)
           FILTER(lang(?nLabel) = "no")
  }
  UNION { <__WORKURI__> deich:hasContentAdaptation ?contentAdaptation .
           ?contentAdaptation rdfs:label ?contentAdaptationLabel .
           BIND(str(?contentAdaptationLabel) AS ?contentAdaptationNorwegianName)
           FILTER(lang(?contentAdaptationLabel) = "no")
        }

  UNION { <__WORKURI__> deich:isPartOfWorkSeries ?wsBnode .
          ?wsBnode deich:workSeries ?workSeries .
          ?workSeries ?seriesPred ?seriesTitle .
          VALUES ?seriesPred { deich:mainTitle deich:subtitle deich:partNumber deich:partTitle }
  }
  UNION { <__WORKURI__> deich:hasTag ?hasTag }
}
